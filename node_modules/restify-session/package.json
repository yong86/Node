{
  "name": "restify-session",
  "version": "1.0.2",
  "description": "Session manager for REST server without cookies",
  "private": false,
  "preferGlobal": false,
  "main": "index.js",
  "scripts": {
    "test": "mocha --require should --reporter spec --recursive"
  },
  "dependencies": {
    "redis": "0.10.x",
    "restify": "2.7.x",
    "object_utils": "*",
    "secure-rnd": "*"
  },
  "analyze": false,
  "devDependencies": {
    "mocha": "1.x",
    "supertest": "0.10.x",
    "should": "3.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mgesmundo/restify-session.git"
  },
  "bugs": {
    "url": "https://github.com/mgesmundo/restify-session/issues"
  },
  "keywords": [
    "session",
    "rest",
    "restify",
    "redis",
    "cookies"
  ],
  "author": {
    "name": "Marcello Gesmundo"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8"
  },
  "readme": "# restify-session\n\nThis module is made to manage session without cookies in a REST server powered by [restify](1).\nPlease install [Redis](2) (>=2.0.0) in your server to enable this module.\nTo create documentation you must install [JSDuck](https://github.com/senchalabs/jsduck) and type in your terminal:\n\n    $ ./gen_doc.sh\n\n## Motivation\n\nWhen you need to access to your REST server with session from a javascript app for iOS bundled as native app using [Phonegap/Cordova](3), you can't use cookies because since iOS 5 these are disables by default.\n\n## Installation\n\nInstall `restify-session` as usual:\n\n    $ npm install --save restify-session\n\n## Usage\n\nIs very simple to enable session:\n\n    // dependencies\n    var restify = require('restify'),\n        session = require('restify-session')({\n            debug : true,\n            ttl   : 2\n        });\n\n    // create the server\n    var server  = restify.createServer();\n\n    // attach the session manager\n    server.use(session.sessionManager)\n\n    // attach a route\n    server.get('/', function(req, res, next){\n       res.send({ success: true, session: req.session });\n       return next();\n    });\n\n    // start the server\n    server.listen(3000);\n\nSave this file as server.js and start it in a terminal window:\n\n    $ node server.js\n\nOpen your browser and put the address of your server:\n\n    http://localhost:3000\n\nNow you see an answer like this:\n\n    {\"success\":true,\"session\":{\"sid\":\"ViS5pHE5n8McblTATbyFUJTGJyzVFeXOcAEZ41Zs\"}}\n\nYou can see your session id (sid) into the response header:\n\n    Session-Id ViS5pHE5n8McblTATbyFUJTGJyzVFeXOcAEZ41Zs\n\nSee full documentation into _doc_ folder.\n\n## Run Tests\n\nAll tests are written in mocha and designed to be run with npm:\n\n    $ npm test\n\n\n[1]: https://www.npmjs.org/package/restify\n[2]: http://redis.io\n[3]: https://www.npmjs.org/package/phonegap",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mgesmundo/restify-session",
  "_id": "restify-session@1.0.2",
  "_shasum": "5900445abf3acbbf035bcfd9fd24b40e95934052",
  "_from": "restify-session@>=1.0.2",
  "_resolved": "https://registry.npmjs.org/restify-session/-/restify-session-1.0.2.tgz"
}
